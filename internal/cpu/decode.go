package cpu

type Decoded struct {
	*Operation
	*Mode
}

var OpecodeMapping []Decoded

func (c *Cpu) initDecoder() {

	OpecodeMapping = []Decoded{
		// 0x
		{Brk, Implicit},
		{Ora, IndirectX},
		{nil, nil},
		{Slo, IndirectX},
		{Nop, ZeroPage},
		{Ora, ZeroPage},
		{Asl, ZeroPage},
		{Slo, ZeroPage},

		{Php, Implicit},
		{Ora, Immediate},
		{Asl, Implicit},
		{Anc, Immediate},
		{Nop, Abusolute},
		{Ora, Abusolute},
		{Asl, Abusolute},
		{Slo, Abusolute},
		// 1x
		{Bpl, Relative},
		{Ora, IndirectY},
		{nil, nil},
		{Slo, IndirectY},
		{Nop, ZeroPageX},
		{Ora, ZeroPageX},
		{Asl, ZeroPageX},
		{Slo, ZeroPageX},

		{Clc, Implicit},
		{Ora, AbusoluteY},
		{Nop, Implicit},
		{Slo, AbusoluteY},
		{Nop, AbusoluteX},
		{Ora, AbusoluteX},
		{Asl, AbusoluteX},
		{Slo, AbusoluteX},
		// 2x
		{Jsr, Abusolute},
		{And, IndirectX},
		{nil, nil},
		{Rla, IndirectX},
		{Bit, ZeroPage},
		{And, ZeroPage},
		{Rol, ZeroPage},
		{Rla, ZeroPage},

		{Plp, Implicit},
		{And, Immediate},
		{Rol, Implicit},
		{Anc, Immediate},
		{Bit, Abusolute},
		{And, Abusolute},
		{Rol, Abusolute},
		{Rla, Abusolute},
		// 3x
		{Bmi, Relative},
		{And, IndirectY},
		{nil, nil},
		{Rla, IndirectY},
		{Nop, ZeroPageX},
		{And, ZeroPageX},
		{Rol, ZeroPageX},
		{Rla, ZeroPageX},

		{Sec, Implicit},
		{And, AbusoluteY},
		{Nop, Implicit},
		{Rla, AbusoluteY},
		{Nop, AbusoluteX},
		{And, AbusoluteX},
		{Rol, AbusoluteX},
		{Rla, AbusoluteX},
		// 4x
		{Rti, Implicit},
		{Eor, IndirectX},
		{nil, nil},
		{Sre, IndirectX},
		{Nop, ZeroPage},
		{Eor, ZeroPage},
		{Lsr, ZeroPage},
		{Sre, ZeroPage},

		{Pha, Implicit},
		{Eor, Immediate},
		{Lsr, Implicit},
		{Alr, Immediate},
		{Jmp, Abusolute},
		{Eor, Abusolute},
		{Lsr, Abusolute},
		{Sre, Abusolute},
		// 5x
		{Bvc, Relative},
		{Eor, IndirectY},
		{nil, nil},
		{Sre, IndirectY},
		{Nop, ZeroPageX},
		{Eor, ZeroPageX},
		{Lsr, ZeroPageX},
		{Sre, ZeroPageX},

		{Cli, Implicit},
		{Eor, AbusoluteY},
		{Nop, Implicit},
		{Sre, AbusoluteY},
		{Nop, AbusoluteX},
		{Eor, AbusoluteX},
		{Lsr, AbusoluteX},
		{Sre, AbusoluteX},
		// 6x
		{Rts, Implicit},
		{Adc, IndirectX},
		{nil, nil},
		{Rra, IndirectX},
		{Nop, IndirectX},
		{Adc, ZeroPage},
		{Ror, ZeroPage},
		{Rra, ZeroPage},

		{Pla, Implicit},
		{Adc, Immediate},
		{Ror, Implicit},
		{Arr, Immediate},
		{Jmp, Indirect},
		{Adc, Abusolute},
		{Ror, Abusolute},
		{Rra, Abusolute},
		// 7x
		{Bvs, Relative},
		{Adc, IndirectY},
		{nil, nil},
		{Rra, IndirectY},
		{Nop, ZeroPageX},
		{Adc, ZeroPageX},
		{Ror, ZeroPageX},
		{Rra, ZeroPageX},

		{Sei, Implicit},
		{Adc, AbusoluteY},
		{Nop, Implicit},
		{Rra, AbusoluteY},
		{Nop, AbusoluteX},
		{Adc, AbusoluteX},
		{Ror, AbusoluteX},
		{Rra, AbusoluteX},
		// 8x
		{Nop, Immediate},
		{Sta, IndirectX},
		{Nop, Immediate},
		{Sax, IndirectX},
		{Sty, ZeroPage},
		{Sta, ZeroPage},
		{Stx, ZeroPage},
		{Sax, ZeroPage},

		{Dey, Implicit},
		{Nop, Immediate},
		{Txa, Implicit},
		{Xaa, Immediate},
		{Sty, Abusolute},
		{Sta, Abusolute},
		{Stx, Abusolute},
		{Sax, Abusolute},
		// 9x
		{Bcc, Relative},
		{Sta, IndirectY},
		{nil, nil},
		{Ahx, IndirectY},
		{Sty, ZeroPageX},
		{Sta, ZeroPageX},
		{Stx, ZeroPageY},
		{Sax, ZeroPageY},

		{Tya, Implicit},
		{Sta, AbusoluteY},
		{Txs, Implicit},
		{Tas, AbusoluteY},
		{Shy, AbusoluteX},
		{Sta, AbusoluteX},
		{Shx, AbusoluteY},
		{Ahx, AbusoluteY},
		// Ax
		{Ldy, Immediate},
		{Lda, IndirectX},
		{Ldx, Immediate},
		{Lax, IndirectX},
		{Ldy, ZeroPage},
		{Lda, ZeroPage},
		{Ldx, ZeroPage},
		{Lax, ZeroPage},

		{Tay, Implicit},
		{Lda, Immediate},
		{Tax, Implicit},
		{Lax, Immediate},
		{Ldy, Abusolute},
		{Lda, Abusolute},
		{Ldx, Abusolute},
		{Lax, Abusolute},
		// Bx
		{Bcs, Relative},
		{Lda, IndirectY},
		{nil, nil},
		{Lax, IndirectY},
		{Ldy, ZeroPageX},
		{Lda, ZeroPageX},
		{Ldx, ZeroPageY},
		{Lax, ZeroPageY},

		{Clv, Implicit},
		{Lda, AbusoluteY},
		{Tsx, Implicit},
		{Las, AbusoluteY},
		{Ldy, AbusoluteX},
		{Lda, AbusoluteX},
		{Ldx, AbusoluteY},
		{Lax, AbusoluteY},
		// Cx
		{Cpy, Immediate},
		{Cmp, IndirectX},
		{Nop, Immediate},
		{Dcp, IndirectX},
		{Cpy, ZeroPage},
		{Cmp, ZeroPage},
		{Dec, ZeroPage},
		{Dcp, ZeroPage},

		{Iny, Implicit},
		{Cmp, Immediate},
		{Dex, Implicit},
		{Axs, Immediate},
		{Cpy, Abusolute},
		{Cmp, Abusolute},
		{Dec, Abusolute},
		{Dcp, Abusolute},
		// Dx
		{Bne, Relative},
		{Cmp, IndirectY},
		{nil, nil},
		{Dcp, IndirectY},
		{Nop, ZeroPageX},
		{Cmp, ZeroPageX},
		{Dec, ZeroPageX},
		{Dcp, ZeroPageX},

		{Cld, Implicit},
		{Cmp, AbusoluteY},
		{Nop, Implicit},
		{Dcp, AbusoluteY},
		{Nop, AbusoluteX},
		{Cmp, AbusoluteX},
		{Dec, AbusoluteX},
		{Dcp, AbusoluteX},
		// Ex
		{Cpx, Immediate},
		{Sbc, IndirectX},
		{Nop, Immediate},
		{Isc, IndirectX},
		{Cpx, ZeroPage},
		{Sbc, ZeroPage},
		{Inc, ZeroPage},
		{Isc, ZeroPage},

		{Inx, Implicit},
		{Sbc, Immediate},
		{Nop, Implicit},
		{Sbc, Immediate},
		{Cpx, Abusolute},
		{Sbc, Abusolute},
		{Inc, Abusolute},
		{Isc, Abusolute},
		// Fx
		{Beq, Relative},
		{Sbc, IndirectY},
		{nil, nil},
		{Isc, IndirectY},
		{Nop, ZeroPageX},
		{Sbc, ZeroPageX},
		{Inc, ZeroPageX},
		{Isc, ZeroPageX},

		{Sed, Implicit},
		{Sbc, AbusoluteY},
		{Nop, Implicit},
		{Isc, AbusoluteY},
		{Nop, AbusoluteX},
		{Sbc, AbusoluteX},
		{Inc, AbusoluteX},
		{Isc, AbusoluteX},
	}
}
func (c *Cpu) decode(opecode uint8) (Operatable, Addressing) {
	decoded := OpecodeMapping[opecode]
	return decoded.Operation, decoded.Mode

}
